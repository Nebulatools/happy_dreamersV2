/**
 * üìä SAMPLE DATA GENERATOR - Happy Dreamers
 * 
 * Genera datos realistas para pruebas del flujo completo
 * Incluye: Survey, Eventos, Transcripts
 */

class SampleDataGenerator {
  constructor() {
    this.eventIdCounter = 1
  }

  /**
   * Survey completo con todas las respuestas (6 pasos)
   */
  get completeSurvey() {
    return {
      completed: true,
      lastUpdated: new Date(),
      
      // Step 1: Informaci√≥n Familiar
      familyInfo: {
        parentNames: ['Mar√≠a Gonz√°lez', 'Juan P√©rez'],
        parentAges: [32, 35],
        parentOccupations: ['Maestra', 'Ingeniero'],
        workSchedules: ['Ma√±ana', 'Tiempo completo'],
        siblings: [
          {
            name: 'Carlos',
            age: 5,
            relationship: 'Hermano mayor'
          }
        ],
        homeAddress: 'Ciudad de M√©xico',
        livingArrangement: 'Casa propia',
        primaryLanguage: 'Espa√±ol',
        secondaryLanguages: ['Ingl√©s']
      },
      
      // Step 2: Historia del Ni√±o
      childHistory: {
        // Embarazo y nacimiento
        pregnancyDuration: 39, // semanas
        pregnancyComplications: false,
        complicationsDetails: '',
        birthType: 'natural', // natural, cesarean, induced
        birthWeight: 3.2, // kg
        birthLength: 50, // cm
        apgarScore: 9,
        neonatalComplications: false,
        
        // Lactancia y alimentaci√≥n temprana
        breastfeeding: true,
        breastfeedingDuration: 12, // meses
        formulaIntroduction: 0, // meses (0 = no formula)
        solidFoodIntroduction: 6, // meses
        feedingDifficulties: false,
        currentDiet: 'Variada y balanceada',
        
        // Historial m√©dico
        hospitalizations: 0,
        chronicConditions: [],
        surgeries: [],
        significantIllnesses: ['Gripe a los 10 meses'],
        vaccinations: 'Al d√≠a',
        lastPediatricVisit: '2025-06-15'
      },
      
      // Step 3: Salud y Desarrollo
      healthDevelopment: {
        // Estado actual de salud
        currentWeight: 10.5, // kg para 18 meses
        currentHeight: 80, // cm
        headCircumference: 47, // cm
        
        // Medicamentos y alergias
        currentMedications: [],
        vitamins: ['Vitamina D'],
        allergies: ['Polvo', 'Polen'],
        foodIntolerances: [],
        
        // Hitos del desarrollo
        developmentMilestones: {
          socialSmile: 2, // meses
          headControl: 3,
          rolling: 5,
          sitting: 6,
          crawling: 8,
          standing: 10,
          walking: 12,
          firstWords: 10,
          twoWordPhrases: 16,
          pincerGrasp: 9,
          selfFeeding: 14,
          drinkingFromCup: 13
        },
        
        // Preocupaciones del desarrollo
        developmentConcerns: [],
        therapies: [],
        
        // Desarrollo sensorial
        vision: 'Normal',
        hearing: 'Normal',
        sensoryIssues: ['Sensibilidad a ruidos fuertes']
      },
      
      // Step 4: Rutina y H√°bitos
      routineHabits: {
        // Horarios t√≠picos
        typicalWakeTime: '07:00',
        typicalBedtime: '20:00',
        desiredWakeTime: '07:00',
        desiredBedtime: '20:00',
        
        // Siestas
        napsPerDay: 1,
        napTimes: ['13:00'],
        napDuration: [90], // minutos
        napLocation: 'Cuna en su cuarto',
        napDifficulty: 'Ocasional',
        
        // Rutina de dormir
        bedtimeRoutineSteps: [
          'Cena ligera',
          'Ba√±o tibio',
          'Pijama',
          'Lectura de cuento',
          'Canci√≥n de cuna',
          'Besos de buenas noches'
        ],
        bedtimeRoutineDuration: 45, // minutos
        
        // Ambiente de sue√±o
        sleepLocation: 'own_room', // own_room, parents_room, shared_room
        sleepSurface: 'Cuna',
        roomTemperature: '20¬∞C',
        roomDarkness: 'Oscuro con luz nocturna tenue',
        noiseLevel: 'Silencioso',
        sleepCompanions: ['Osito de peluche', 'Mantita'],
        
        // Comportamiento del sue√±o
        fallAsleepMethod: 'Solo despu√©s de rutina',
        averageTimeToSleep: 20, // minutos
        nightWakings: 1, // promedio por noche
        nightWakingResponse: 'Consuelo breve sin sacar de cuna',
        earlyMorningWaking: 'Ocasional (6:30 AM)',
        
        // Problemas de sue√±o
        sleepProblems: [
          'Resistencia ocasional a dormir',
          'Despertar nocturno ocasional'
        ],
        sleepProblemDuration: '2 meses',
        previousInterventions: ['Rutina m√°s consistente']
      },
      
      // Step 5: Actividad F√≠sica
      physicalActivity: {
        // Actividad diaria
        dailyActivityHours: 2,
        outdoorTimeHours: 1.5,
        structuredActivities: ['Nataci√≥n beb√©s (1 vez/semana)'],
        unstructuredPlayTime: 3, // horas
        
        // Tiempo de pantalla
        screenTimeHours: 0.5,
        screenTimeContent: ['Videos educativos'],
        screenTimeTiming: 'Solo en la ma√±ana',
        
        // Actividades favoritas
        favoriteActivities: [
          'Jugar con bloques',
          'Correr en el parque',
          'Juegos de agua',
          'Libros interactivos'
        ],
        
        // Nivel de energ√≠a
        energyLevel: 'Alto', // Bajo, Medio, Alto, Muy alto
        energyPeakTimes: ['10:00', '16:00'],
        calmActivities: [
          'Colorear',
          'Rompecabezas',
          'M√∫sica suave'
        ],
        
        // Actividad antes de dormir
        eveningActivityLevel: 'Tranquila',
        lastActivePlayTime: '17:00',
        windDownActivities: [
          'Lectura',
          'Juego tranquilo',
          'M√∫sica relajante'
        ]
      },
      
      // Step 6: Din√°mica Familiar
      familyDynamics: {
        // Estructura familiar
        familyStructure: 'nuclear', // nuclear, extended, single_parent, blended
        householdMembers: 4,
        primaryCaregiver: 'Madre',
        caregiverWorkSchedule: 'Medio tiempo',
        
        // Estilo de crianza
        parentingStyle: 'authoritative', // authoritative, authoritarian, permissive, uninvolved
        parentingConsistency: 'Generalmente consistente',
        disciplineApproach: 'Tiempo fuera y redirecci√≥n',
        
        // Rutinas familiares
        familyMealTimes: ['08:00', '13:00', '18:30'],
        familyBedtimes: {
          child: '20:00',
          sibling: '21:00',
          parents: '22:30'
        },
        weekendRoutine: 'Similar con m√°s flexibilidad',
        
        // Estr√©s familiar
        familyStressors: [
          'Horarios de trabajo',
          'Adaptaci√≥n a hermano menor'
        ],
        recentChanges: ['Mudanza hace 3 meses'],
        supportSystem: 'Abuelos cerca, visitas semanales',
        
        // Cultura del sue√±o familiar
        familySleepPriority: 'Alta',
        parentSleepQuality: 'Regular',
        familySleepChallenges: ['Hermano mayor a veces despierta al beb√©'],
        
        // Expectativas y metas
        sleepGoals: [
          'Dormir toda la noche sin despertares',
          'Mantener horario consistente',
          'Reducir tiempo para dormirse'
        ],
        parentCommitment: 'Alto',
        previousSleepTraining: 'M√©todo de extinci√≥n gradual a los 12 meses'
      }
    }
  }

  /**
   * Genera eventos para un d√≠a t√≠pico
   */
  generateDayEvents(date) {
    const events = []
    
    // Despertar matutino (6:30 - 7:30 AM)
    const wakeTime = new Date(date)
    wakeTime.setHours(6 + Math.random(), Math.random() * 60, 0, 0)
    
    // Evento de despertar
    events.push({
      eventType: 'wake_up',
      startTime: wakeTime,
      endTime: wakeTime,
      emotionalState: this.randomFrom(['happy', 'calm', 'fussy']),
      quality: Math.floor(Math.random() * 2) + 3, // 3-5
      notes: this.randomFrom([
        'Despert√≥ de buen humor',
        'Despert√≥ llamando',
        'Despert√≥ tranquilo',
        ''
      ])
    })
    
    // Siesta (12:30 - 2:00 PM)
    if (Math.random() > 0.2) { // 80% de d√≠as con siesta
      const napStart = new Date(date)
      napStart.setHours(12 + Math.random(), 30 + Math.random() * 30, 0, 0)
      
      const napDuration = 60 + Math.random() * 60 // 60-120 minutos
      const napEnd = new Date(napStart.getTime() + napDuration * 60000)
      
      events.push({
        eventType: 'nap_start',
        startTime: napStart,
        endTime: napEnd,
        duration: napDuration,
        emotionalState: 'calm',
        sleepDelay: Math.floor(Math.random() * 20), // 0-20 minutos
        quality: Math.floor(Math.random() * 2) + 3,
        notes: this.randomFrom([
          'Se durmi√≥ f√°cilmente',
          'Necesit√≥ mecerlo',
          'Protest√≥ un poco al inicio',
          ''
        ])
      })
      
      events.push({
        eventType: 'nap_end',
        startTime: napEnd,
        endTime: napEnd,
        emotionalState: this.randomFrom(['happy', 'calm', 'fussy']),
        notes: 'Despert√≥ de la siesta'
      })
    }
    
    // Hora de dormir (19:30 - 20:30)
    const bedtime = new Date(date)
    bedtime.setHours(19 + Math.random(), 30 + Math.random() * 30, 0, 0)
    
    // Despertar nocturno ocasional (30% probabilidad)
    let nightWakingCount = 0
    if (Math.random() > 0.7) {
      nightWakingCount = Math.floor(Math.random() * 2) + 1 // 1-2 despertares
      
      const nightWaking = new Date(date)
      nightWaking.setHours(23 + Math.random() * 4, Math.random() * 60, 0, 0)
      
      events.push({
        eventType: 'night_waking',
        startTime: nightWaking,
        endTime: new Date(nightWaking.getTime() + 10 * 60000), // 10 minutos
        duration: 10,
        emotionalState: 'fussy',
        notes: this.randomFrom([
          'Pesadilla',
          'Sed',
          'Llam√≥ a mam√°',
          'Se calm√≥ solo'
        ])
      })
    }
    
    events.push({
      eventType: 'bedtime',
      startTime: bedtime,
      endTime: new Date(date.getTime() + 24 * 60 * 60 * 1000 + 7 * 60 * 60 * 1000), // Hasta el pr√≥ximo d√≠a 7 AM
      duration: 660, // 11 horas promedio
      emotionalState: 'calm',
      sleepDelay: 10 + Math.floor(Math.random() * 20), // 10-30 minutos
      nightWakingCount: nightWakingCount,
      quality: nightWakingCount > 0 ? 3 : 4,
      notes: this.randomFrom([
        'Rutina completa realizada',
        'Se durmi√≥ con su osito',
        'Protest√≥ un poco al principio',
        'Se durmi√≥ m√°s r√°pido que ayer',
        ''
      ])
    })
    
    return events
  }

  /**
   * Genera eventos mejorados (despu√©s de implementar plan)
   */
  generateImprovedDayEvents(date) {
    const events = []
    
    // Despertar m√°s consistente (6:45 - 7:15 AM)
    const wakeTime = new Date(date)
    wakeTime.setHours(6, 45 + Math.random() * 30, 0, 0)
    
    events.push({
      eventType: 'wake_up',
      startTime: wakeTime,
      endTime: wakeTime,
      emotionalState: this.randomFrom(['happy', 'calm']), // Menos fussy
      quality: 4 + Math.floor(Math.random() * 2), // 4-5
      notes: 'Despert√≥ descansado'
    })
    
    // Siesta m√°s consistente
    const napStart = new Date(date)
    napStart.setHours(13, Math.random() * 15, 0, 0) // 13:00-13:15
    
    const napDuration = 60 + Math.random() * 30 // 60-90 minutos (m√°s corta)
    const napEnd = new Date(napStart.getTime() + napDuration * 60000)
    
    events.push({
      eventType: 'nap_start',
      startTime: napStart,
      endTime: napEnd,
      duration: napDuration,
      emotionalState: 'calm',
      sleepDelay: Math.floor(Math.random() * 10), // 0-10 minutos (menos delay)
      quality: 4,
      notes: 'Se durmi√≥ con rutina establecida'
    })
    
    events.push({
      eventType: 'nap_end',
      startTime: napEnd,
      endTime: napEnd,
      emotionalState: 'happy',
      notes: 'Despert√≥ bien de la siesta'
    })
    
    // Hora de dormir m√°s consistente
    const bedtime = new Date(date)
    bedtime.setHours(20, Math.random() * 15, 0, 0) // 20:00-20:15
    
    // Menos despertares nocturnos (15% probabilidad)
    let nightWakingCount = 0
    if (Math.random() > 0.85) {
      nightWakingCount = 1 // Solo 1 despertar m√°ximo
      
      const nightWaking = new Date(date)
      nightWaking.setHours(2 + Math.random() * 2, Math.random() * 60, 0, 0)
      
      events.push({
        eventType: 'night_waking',
        startTime: nightWaking,
        endTime: new Date(nightWaking.getTime() + 5 * 60000), // Solo 5 minutos
        duration: 5,
        emotionalState: 'calm',
        notes: 'Se auto-consol√≥ r√°pidamente'
      })
    }
    
    events.push({
      eventType: 'bedtime',
      startTime: bedtime,
      endTime: new Date(date.getTime() + 24 * 60 * 60 * 1000 + 7 * 60 * 60 * 1000),
      duration: 660,
      emotionalState: 'calm',
      sleepDelay: 5 + Math.floor(Math.random() * 10), // 5-15 minutos (mejorado)
      nightWakingCount: nightWakingCount,
      quality: 5, // Excelente calidad
      notes: 'Mejora significativa en el patr√≥n de sue√±o'
    })
    
    return events
  }

  /**
   * Transcript de consulta realista
   */
  get consultationTranscript() {
    return `
CONSULTA M√âDICA - SEGUIMIENTO PLAN DE SUE√ëO
Fecha: ${new Date().toLocaleDateString()}
Participantes: Dra. L√≥pez (Especialista en Sue√±o), Mar√≠a Gonz√°lez (Madre), Juan P√©rez (Padre)

[INICIO DE TRANSCRIPCI√ìN]

Dra. L√≥pez: Buenos d√≠as, Mar√≠a y Juan. ¬øC√≥mo les ha ido con el plan de sue√±o que implementamos hace dos semanas?

Mar√≠a: Hola doctora. La verdad es que hemos visto mejoras significativas. Josefina se est√° durmiendo m√°s r√°pido, antes tardaba hasta 30 minutos y ahora son como 15 minutos m√°ximo.

Juan: S√≠, y los despertares nocturnos han disminuido mucho. Antes se despertaba 2 o 3 veces, ahora m√°ximo una vez, y a veces duerme toda la noche.

Dra. L√≥pez: Excelente, eso es un progreso muy positivo. ¬øHan notado alg√∫n patr√≥n en los d√≠as que s√≠ se despierta?

Mar√≠a: Mmmm, ahora que lo menciona, creo que se despierta m√°s cuando no hace siesta completa, o cuando la siesta es muy tarde.

Dra. L√≥pez: Muy buena observaci√≥n. La siesta es crucial a esta edad. ¬øA qu√© hora est√° haciendo siesta normalmente?

Juan: Tratamos que sea a la 1 PM, pero a veces se resiste y termina siendo a las 2 o 2:30.

Dra. L√≥pez: Entiendo. Veo en los registros que la duraci√≥n de la siesta var√≠a entre 60 y 120 minutos. ¬øHan notado diferencia en el sue√±o nocturno seg√∫n la duraci√≥n?

Mar√≠a: S√≠, cuando duerme m√°s de hora y media en la siesta, le cuesta m√°s dormirse en la noche. Pero si duerme menos de una hora, est√° irritable toda la tarde.

Dra. L√≥pez: Es un balance delicado. Les sugiero que empecemos a implementar una t√©cnica de "fading" para la siesta. Vamos a reducir gradualmente la duraci√≥n m√°xima de 90 a 60 minutos durante las pr√≥ximas 2-3 semanas. Reduzcan 5 minutos cada 3 d√≠as.

Juan: ¬øY si se despierta muy molesta?

Dra. L√≥pez: Si est√° muy irritable, pueden mantener esa duraci√≥n 3 d√≠as m√°s antes de continuar reduciendo. El objetivo es que su cuerpo se adapte gradualmente. Ahora, h√°bleme del ambiente de sue√±o. ¬øHan hecho alg√∫n cambio?

Mar√≠a: Seguimos su consejo de mantener el cuarto m√°s oscuro, pero todav√≠a entra algo de luz por las cortinas.

Dra. L√≥pez: Recomiendo invertir en cortinas blackout completas. He notado que Josefina parece ser especialmente sensible a la luz. Esto tambi√©n ayudar√° con esos despertares a las 6:30 AM que mencionaron en el registro.

Juan: Tiene sentido. Tambi√©n quer√≠amos preguntarle sobre el objeto de transici√≥n. Tiene un osito pero no siempre lo quiere.

Dra. L√≥pez: Es normal. Les sugiero que durante el d√≠a jueguen con el osito, que sea parte de actividades positivas. P√≥nganle un nombre especial, "Se√±or Oso" o algo as√≠, y que solo aparezca en momentos de calma y para dormir. Incluyanlo en la rutina de forma consistente.

Mar√≠a: ¬øY si lo rechaza?

Dra. L√≥pez: No lo fuercen. Simplemente d√©jenlo en la cuna, disponible. Con el tiempo, la asociaci√≥n positiva se formar√°. Ahora, revisemos la rutina nocturna. ¬øSiguen los pasos que establecimos?

Juan: S√≠, cena a las 6:30, ba√±o a las 7:30, y tratamos de acostarla a las 8.

Dra. L√≥pez: Perfecto. Solo un ajuste: veo que algunos d√≠as se duerme hasta las 8:30. Les sugiero ser flexibles con una ventana de 8:00 a 8:30. Si no tiene sue√±o a las 8, no la fuercen. Esperen 15 minutos m√°s con actividades muy tranquilas.

Mar√≠a: Eso nos quita presi√≥n. A veces nos estresamos si no se duerme exactamente a las 8.

Dra. L√≥pez: Exacto, el estr√©s de los padres lo perciben los ni√±os. Ahora, sobre las pantallas...

Juan: Hemos eliminado completamente las pantallas despu√©s de las 6 PM como sugiri√≥.

Dra. L√≥pez: Excelente. ¬øHan notado diferencia?

Mar√≠a: S√≠, definitivamente est√° m√°s tranquila en las tardes.

Dra. L√≥pez: Perfecto. Mantengamos eso. Ahora, hay algunos puntos adicionales que quiero agregar al plan:

1. Para los despertares antes de las 6:30 AM: no interact√∫en con ella hasta esa hora. Pueden verificar que est√© bien, pero no la saquen de la cuna.

2. Celebren los peque√±os logros. Cuando duerma toda la noche, h√°ganle saber en la ma√±ana que est√°n orgullosos.

3. Mantengan la consistencia incluso los fines de semana. S√© que es tentador ser flexibles, pero a esta edad la consistencia es clave.

Juan: ¬øY si tenemos un evento familiar o algo as√≠?

Dra. L√≥pez: Ocasionalmente est√° bien salirse de la rutina, pero traten de que no sea m√°s de una vez por semana y vuelvan inmediatamente a la rutina normal.

Mar√≠a: Doctora, ¬øcu√°ndo deber√≠amos ver resultados m√°s consistentes?

Dra. L√≥pez: Con los ajustes que estamos haciendo hoy, especialmente el fading de la siesta y las cortinas blackout, deber√≠an ver mejoras adicionales en 2-3 semanas. Programemos una llamada de seguimiento para dentro de 15 d√≠as.

Juan: Perfecto. ¬øHay algo m√°s que debamos monitorear?

Dra. L√≥pez: Sigan registrando los eventos de sue√±o como lo han hecho. Pongan especial atenci√≥n a:
- Hora exacta de inicio de sue√±o
- N√∫mero y duraci√≥n de despertares nocturnos
- Estado de √°nimo al despertar
- Cualquier factor inusual (enfermedad, visitas, cambios de rutina)

Mar√≠a: Entendido. Muchas gracias doctora, nos sentimos mucho m√°s confiados con estos ajustes.

Dra. L√≥pez: Me alegra mucho escuchar sobre el progreso. Est√°n haciendo un excelente trabajo. Recuerden, el sue√±o infantil no es lineal, habr√° algunos retrocesos, pero la tendencia general debe ser positiva. ¬øAlguna otra pregunta?

Juan: No, creo que est√° todo claro.

Dra. L√≥pez: Perfecto. Los veo en dos semanas entonces. Si surge algo urgente antes, no duden en contactarme. Sigan con el excelente trabajo.

Mar√≠a y Juan: Muchas gracias doctora. Hasta luego.

[FIN DE TRANSCRIPCI√ìN]

RESUMEN DE ACUERDOS:
1. Implementar t√©cnica de fading para siesta (90 ‚Üí 60 minutos en 3 semanas)
2. Instalar cortinas blackout completas
3. Introducir objeto de transici√≥n "Se√±or Oso" gradualmente
4. Flexibilizar ventana de sue√±o 20:00-20:30
5. No interactuar antes de 6:30 AM en despertares tempranos
6. Mantener prohibici√≥n de pantallas despu√©s de 18:00
7. Seguimiento en 15 d√≠as
    `
  }

  /**
   * Genera un plan esperado basado en datos
   */
  generateExpectedPlan(planNumber, planType) {
    const plans = {
      0: {
        title: 'Plan Inicial de Sue√±o',
        focus: 'Establecer rutinas b√°sicas',
        keyPoints: [
          'Horario consistente 20:00',
          'Rutina de 30-45 minutos',
          'Siesta de 90 minutos a las 13:00',
          'Ambiente oscuro y fresco'
        ]
      },
      1: {
        title: 'Plan Actualizado - Primera Iteraci√≥n',
        focus: 'Ajustes basados en patrones observados',
        keyPoints: [
          'Ventana flexible 20:00-20:15',
          'Reducci√≥n gradual de siesta',
          'T√©cnicas de auto-consuelo',
          'Optimizaci√≥n de ambiente'
        ]
      },
      '1.1': {
        title: 'Plan Refinado Post-Consulta',
        focus: 'Incorporaci√≥n de recomendaciones profesionales',
        keyPoints: [
          'T√©cnica de fading para siesta',
          'Cortinas blackout',
          'Objeto de transici√≥n',
          'Manejo de despertares tempranos'
        ]
      }
    }
    
    return plans[planNumber] || plans[0]
  }

  /**
   * Helper: Seleccionar elemento aleatorio de array
   */
  randomFrom(array) {
    return array[Math.floor(Math.random() * array.length)]
  }
}

// Funci√≥n exportada para facilitar uso
function generateSampleData() {
  const generator = new SampleDataGenerator()
  
  return {
    completeSurvey: generator.completeSurvey,
    consultationTranscript: generator.consultationTranscript,
    generateDayEvents: (date) => generator.generateDayEvents(date),
    generateImprovedDayEvents: (date) => generator.generateImprovedDayEvents(date),
    generateExpectedPlan: (num, type) => generator.generateExpectedPlan(num, type)
  }
}

module.exports = {
  SampleDataGenerator,
  generateSampleData
}