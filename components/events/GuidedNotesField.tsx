"use client"

import React from "react"
import { Textarea } from "@/components/ui/textarea"
import { Label } from "@/components/ui/label"
import { cn } from "@/lib/utils"

interface GuidedNotesFieldProps {
  eventType: string
  value: string
  onChange: (value: string) => void
  label?: string
  className?: string
  required?: boolean
}

// Placeholders guiados segÃºn el tipo de evento
const GUIDED_PLACEHOLDERS: Record<string, string> = {
  // Eventos de sueÃ±o
  sleep: "Â¿CÃ³mo se durmiÃ³? Â¿Lo arrullaron, tomÃ³ pecho, lo dejaron en la cuna despierto? Â¿Hubo alguna dificultad?",
  bedtime: "Â¿CÃ³mo fue la rutina antes de dormir? Â¿Estaba cansado o activo? Â¿NecesitÃ³ ayuda para relajarse?",
  wake: "Â¿CÃ³mo se despertÃ³? Â¿Solo o lo despertaron? Â¿De buen humor o llorando?",
  
  // Despertares nocturnos
  night_waking: "Â¿QuÃ© pasÃ³ durante el despertar? Â¿LlorÃ³ mucho? Â¿NecesitÃ³ consuelo? Â¿QuÃ© ayudÃ³ a calmarlo?",
  night_feeding: "Â¿Por quÃ© se despertÃ³? Â¿TenÃ­a hambre o necesitaba consuelo? Â¿VolviÃ³ a dormir fÃ¡cilmente?",
  
  // AlimentaciÃ³n
  feeding: "Â¿Cantidad? Â¿CÃ³mo fue la toma? Â¿Se quedÃ³ satisfecho? Â¿Hubo dificultades?",
  breast: "Â¿CuÃ¡nto tiempo tomÃ³? Â¿De uno o ambos pechos? Â¿Se quedÃ³ satisfecho?",
  bottle: "Â¿Cantidad en ml/oz? Â¿TerminÃ³ todo? Â¿A quÃ© temperatura prefiriÃ³ la leche?",
  solids: "Â¿QuÃ© comiÃ³? Â¿Le gustÃ³? Â¿Cantidad aproximada? Â¿Alguna reacciÃ³n o rechazo?",
  
  // Medicamentos
  medication: "Â¿QuÃ© medicamento? Â¿Dosis? Â¿RazÃ³n? Â¿Hora exacta? Â¿Alguna reacciÃ³n?",
  
  // Actividades extras
  extra_activities: "Describe el evento que puede afectar el sueÃ±o (visita, salida, cambio de rutina, etc.)",
  bath: "Â¿CÃ³mo fue el baÃ±o? Â¿Le gustÃ³? Â¿Le ayudÃ³ a relajarse?",
  play: "Â¿QuÃ© tipo de juego? Â¿Se cansÃ³? Â¿Estuvo muy activo?",
  outing: "Â¿A dÃ³nde fueron? Â¿CÃ³mo estuvo el bebÃ©? Â¿AfectÃ³ su rutina?",
  
  // Salud
  illness: "Â¿QuÃ© sÃ­ntomas presenta? Â¿Fiebre? Â¿Desde cuÃ¡ndo? Â¿Ha visto al mÃ©dico?",
  vaccination: "Â¿QuÃ© vacuna recibiÃ³? Â¿Alguna reacciÃ³n? Â¿Fiebre o malestar?",
  teething: "Â¿QuÃ© dientes estÃ¡n saliendo? Â¿Mucho dolor? Â¿QuÃ© ayuda a calmarlo?",
  
  // Estado emocional
  mood: "Â¿CÃ³mo estuvo de Ã¡nimo hoy? Â¿AlgÃºn cambio notable? Â¿QuÃ© pudo causarlo?",
  tantrum: "Â¿QuÃ© provocÃ³ el berrinche? Â¿CuÃ¡nto durÃ³? Â¿CÃ³mo se calmÃ³?",
  
  // Default
  default: "AÃ±ade detalles importantes sobre este evento..."
}

// FunciÃ³n para obtener el placeholder apropiado
const getPlaceholder = (eventType: string): string => {
  // Buscar coincidencia exacta
  if (GUIDED_PLACEHOLDERS[eventType]) {
    return GUIDED_PLACEHOLDERS[eventType]
  }
  
  // Buscar coincidencias parciales
  const lowerType = eventType.toLowerCase()
  for (const [key, placeholder] of Object.entries(GUIDED_PLACEHOLDERS)) {
    if (lowerType.includes(key) || key.includes(lowerType)) {
      return placeholder
    }
  }
  
  // Placeholder por defecto
  return GUIDED_PLACEHOLDERS.default
}

export function GuidedNotesField({
  eventType,
  value,
  onChange,
  label = "Notas",
  className,
  required = false
}: GuidedNotesFieldProps) {
  const placeholder = getPlaceholder(eventType)
  
  return (
    <div className={cn("space-y-2", className)}>
      <Label htmlFor="guided-notes">
        {label}
        {required && <span className="text-red-500 ml-1">*</span>}
        {!required && <span className="text-gray-500 ml-1">(opcional)</span>}
      </Label>
      
      <Textarea
        id="guided-notes"
        value={value}
        onChange={(e) => onChange(e.target.value)}
        placeholder={placeholder}
        className="min-h-[100px] resize-y"
        required={required}
      />
      
      {/* Texto de ayuda contextual */}
      <p className="text-xs text-gray-500">
        {eventType === 'sleep' || eventType === 'bedtime' ? 
          "ðŸ’¡ Estos detalles ayudan a identificar patrones y mejorar el sueÃ±o" :
          eventType === 'night_waking' ?
          "ðŸ’¡ Esta informaciÃ³n es crucial para entender las causas del despertar" :
          eventType.includes('feeding') || eventType === 'breast' || eventType === 'bottle' ?
          "ðŸ’¡ Los detalles de alimentaciÃ³n ayudan a correlacionar con el sueÃ±o" :
          eventType === 'medication' ?
          "ðŸ’¡ Es importante registrar medicamentos para el anÃ¡lisis mÃ©dico" :
          "ðŸ’¡ Cualquier detalle puede ser Ãºtil para el anÃ¡lisis"
        }
      </p>
    </div>
  )
}

// Export de los placeholders para uso en otros componentes
export { GUIDED_PLACEHOLDERS, getPlaceholder }