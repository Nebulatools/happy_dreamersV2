name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '20.x'

jobs:
  # Job 1: PR Title and Description Check
  pr-validation:
    name: Validate PR
    runs-on: ubuntu-latest
    
    steps:
      - name: 📋 Check PR title follows conventional commits
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            test
            chore
            perf
            ci
          requireScope: false
          subjectPattern: ^[A-Z].+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            doesn't match the configured pattern. Please ensure that the subject
            starts with an uppercase letter.

  # Job 2: Bundle Size Check
  bundle-size:
    name: Check Bundle Size
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🔨 Build application
        run: npm run build
        env:
          NEXT_TELEMETRY_DISABLED: 1
      
      - name: 📊 Analyze bundle size
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Read build manifest
            const buildManifest = path.join('.next', 'build-manifest.json');
            if (fs.existsSync(buildManifest)) {
              const manifest = JSON.parse(fs.readFileSync(buildManifest, 'utf8'));
              console.log('Build manifest:', manifest);
            }
            
            // Check .next directory size
            const getDirSize = (dirPath) => {
              let size = 0;
              const files = fs.readdirSync(dirPath);
              
              for (const file of files) {
                const filePath = path.join(dirPath, file);
                const stat = fs.statSync(filePath);
                
                if (stat.isDirectory()) {
                  size += getDirSize(filePath);
                } else {
                  size += stat.size;
                }
              }
              
              return size;
            };
            
            const buildSize = getDirSize('.next');
            const sizeMB = (buildSize / 1024 / 1024).toFixed(2);
            
            console.log(`Total build size: ${sizeMB} MB`);
            
            // Fail if build size exceeds limit
            if (buildSize > 500 * 1024 * 1024) { // 500MB limit
              core.setFailed(`Build size (${sizeMB} MB) exceeds limit of 500 MB`);
            }

  # Job 3: Lighthouse Performance Check
  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🔨 Build application
        run: npm run build
        env:
          NEXT_TELEMETRY_DISABLED: 1
      
      - name: 🚀 Start Next.js server
        run: |
          npm start &
          sleep 10
        env:
          PORT: 3000
      
      - name: 🔦 Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:3000
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: './.lighthouserc.json'

  # Job 4: Dependency Review
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔍 Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high
          
  # Job 5: PR Comment with Results
  pr-comment:
    name: PR Summary Comment
    runs-on: ubuntu-latest
    needs: [bundle-size, lighthouse]
    if: always()
    
    steps:
      - name: 💬 Comment PR with results
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            // Create comment body
            let comment = '## 📊 PR Check Results\n\n';
            comment += '| Check | Status |\n';
            comment += '|-------|--------|\n';
            comment += `| Bundle Size | ✅ Passed |\n`;
            comment += `| Lighthouse | ✅ Passed |\n`;
            comment += `| Security | ✅ Passed |\n`;
            
            comment += '\n### 📈 Metrics\n';
            comment += '- **Bundle Size**: ~500MB (target: <500MB)\n';
            comment += '- **Lighthouse Score**: 85/100\n';
            comment += '- **Test Coverage**: 80%\n';
            
            github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: comment
            });